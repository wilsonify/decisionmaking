using Distributions
using SpecialFunctions

function bayesian_score_component(M, α)
    p = sum(loggamma.(α + M))
    p -= sum(loggamma.(α))
    p += sum(loggamma.(sum(α, dims = 2)))
    p -= sum(loggamma.(sum(α, dims = 2) + sum(M, dims = 2)))
    return p
end

function bayesian_score(vars, G, D)
    """
    An algorithm for computing the Bayesian score for a list of variables vars and a graph G given data D. 
    This method uses a uniform prior αijk = 1 for all i, j, and k as generated by algorithm 4.2.
    The loggamma function is provided by SpecialFunctions.jl. 
    Chapter 4 introduced the statistics and prior functions. 
    Note that
        log(Γ(α)/Γ(α + m)) = log Γ(α) −
        log Γ(α + m), and that log Γ(1) = 0.
    """
    n = length(vars)
    M = statistics(vars, G, D)
    α = prior(vars, G)
    return sum(bayesian_score_component(M[i], α[i]) for i = 1:n)
end
